{"version":3,"sources":["component/constant.js","component/generate.js","component/github.js","component/segment.js","component/index.js","assets/2005.JPG","App.js","index.js"],"names":["format","generateFile","user","repo","commitArray","Promise","resolve","reject","a","element","document","createElement","commits","map","commit","setAttribute","encodeURIComponent","fileTemplate","style","display","body","appendChild","click","removeChild","error","content","makeCommit","dateStringArray","Array","fill","_","index","date","flat","data","moment","b","c","d","e","f","g","segmentAndWeekMap","yearMethodMap","getByAllYears","fromDateString","toDateString","dates","fromDate","toDate","push","add","getSegmentByDate","dateString","getDateForSegment","allSegmentAvailableDates","yearDigit","split","numberArray","getSegmentStartWeek","segmentIndex","formattedDate","thirdWeekFirstDay","clone","weeks","startOf","startDate","endDate","isBefore","callMethod","fromYear","toYear","Set","App","useState","setFromYear","setToYear","setRepo","setUser","setCommits","animation","setAnimation","loading","setLoading","useEffect","setTimeout","isEmpty","field","hasError","delay","time","downloadFile","alert","Number","className","border","marginTop","marginBottom","paddingBottom","paddingTop","color","padding","href","target","rel","htmlFor","onChange","value","id","type","min","placeholder","disabled","onClick","src","image2005","alt","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.851c529b.chunk.js","sourcesContent":["export const format = \"YYYY-MM-DD\"","function generateFile(user, repo, commitArray) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      var element = document.createElement(\"a\");\n      let commits = \"\";\n      commitArray.map((commit) => {\n        commits += `${commit}\\n`;\n        return commit;\n      });\n      element.setAttribute(\n        \"href\",\n        \"data:text/plain;charset=utf-8,\" +\n          encodeURIComponent(fileTemplate(user, repo, commits))\n      );\n      element.setAttribute(\"download\", \"github.sh\");\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      resolve();\n    } catch (error) {\n      reject();\n    }\n  });\n}\n\nconst fileTemplate = (user, repo, commits) => {\n  let content = \"#!/bin/bash\\n\";\n  content += `git init ${repo}\\n`;\n  content += `cd ${repo}\\n`;\n  content += \"touch README.md\\n\";\n  content += \"git add README.md\\n\";\n  content += commits;\n  content += `git remote add origin git@github.com:${user}/${repo}.git\\n`;\n  content += \"git branch -M main\\n\";\n  content += \"git push -u origin main\";\n  return content;\n};\n\nexport { generateFile };\n","const makeCommit = (dateStringArray, commits) => {\n  return Array(commits)\n    .fill()\n    .map((_, index) => {\n      return dateStringArray.map((date) => {\n        return `GIT_AUTHOR_DATE=\"${date}T12:01:01 PM UTC\" GIT_COMMITTER_DATE=\"${date}T12:01:01 PM UTC\" git commit --allow-empty -m \"Auto Commit by segmenthub\"`;\n      });\n    })\n    .flat();\n};\n\nexport { makeCommit };\n","import moment from \"moment\";\nimport { format } from \"./constant\";\n\nconst a = (data) => {\n  return [\n    moment(data[0], \"YYYY-MM-DD\").format(format),\n    moment(data[7], \"YYYY-MM-DD\").format(format),\n    moment(data[14], \"YYYY-MM-DD\").format(format),\n    moment(data[21], \"YYYY-MM-DD\").format(format),\n    moment(data[28], \"YYYY-MM-DD\").format(format),\n    moment(data[35], \"YYYY-MM-DD\").format(format),\n    moment(data[42], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst b = (data) => {\n  return [\n    moment(data[42], \"YYYY-MM-DD\").format(format),\n    moment(data[43], \"YYYY-MM-DD\").format(format),\n    moment(data[44], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst c = (data) => {\n  return [\n    moment(data[46], \"YYYY-MM-DD\").format(format),\n    moment(data[47], \"YYYY-MM-DD\").format(format),\n    moment(data[48], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst d = (data) => {\n  return [\n    moment(data[6], \"YYYY-MM-DD\").format(format),\n    moment(data[13], \"YYYY-MM-DD\").format(format),\n    moment(data[20], \"YYYY-MM-DD\").format(format),\n    moment(data[27], \"YYYY-MM-DD\").format(format),\n    moment(data[34], \"YYYY-MM-DD\").format(format),\n    moment(data[41], \"YYYY-MM-DD\").format(format),\n    moment(data[48], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst e = (data) => {\n  return [\n    moment(data[4], \"YYYY-MM-DD\").format(format),\n    moment(data[5], \"YYYY-MM-DD\").format(format),\n    moment(data[6], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst f = (data) => {\n  return [\n    moment(data[0], \"YYYY-MM-DD\").format(format),\n    moment(data[1], \"YYYY-MM-DD\").format(format),\n    moment(data[2], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst g = (data) => {\n  return [\n    moment(data[3], \"YYYY-MM-DD\").format(format),\n    moment(data[10], \"YYYY-MM-DD\").format(format),\n    moment(data[17], \"YYYY-MM-DD\").format(format),\n    moment(data[24], \"YYYY-MM-DD\").format(format),\n    moment(data[31], \"YYYY-MM-DD\").format(format),\n    moment(data[38], \"YYYY-MM-DD\").format(format),\n    moment(data[45], \"YYYY-MM-DD\").format(format),\n  ];\n};\n\nconst zero = (data) => {\n  return [\n    ...a(data),\n    ...b(data),\n    moment(data[45], \"YYYY-MM-DD\").format(format),\n    ...c(data),\n    ...d(data),\n    ...e(data),\n    moment(data[3], \"YYYY-MM-DD\").format(format),\n    ...f(data),\n  ];\n};\nconst one = (data) => {\n  const response = [\n    ...b(data),\n    moment(data[45], \"YYYY-MM-DD\").format(format),\n    ...c(data),\n  ];\n  return response;\n};\nconst two = (data) => [\n  ...a(data),\n  ...b(data),\n  ...d(data),\n  ...e(data),\n  ...g(data),\n];\nconst three = (data) => [\n  ...a(data),\n  ...b(data),\n  ...c(data),\n  ...d(data),\n  ...g(data),\n];\nconst four = (data) => [...b(data), ...c(data), ...f(data), ...g(data)];\nconst five = (data) => [\n  ...a(data),\n  ...c(data),\n  ...d(data),\n  ...f(data),\n  ...g(data),\n];\nconst six = (data) => [\n  ...a(data),\n  ...c(data),\n  ...d(data),\n  ...e(data),\n  ...f(data),\n  ...g(data),\n];\nconst seven = (data) => [\n  ...a(data),\n  ...b(data),\n  moment(data[45], \"YYYY-MM-DD\").format(format),\n  ...c(data),\n];\nconst eight = (data) => [\n  ...a(data),\n  ...b(data),\n  moment(data[45], \"YYYY-MM-DD\").format(format),\n  ...c(data),\n  ...d(data),\n  ...e(data),\n  ...f(data),\n  ...g(data),\n];\nconst nine = (data) => [\n  ...a(data),\n  ...b(data),\n  ...c(data),\n  ...d(data),\n  ...f(data),\n  ...g(data),\n];\n\nexport { zero, one, two, three, four, five, six, seven, eight, nine };\n","import moment from \"moment\";\nimport { format } from \"./constant\";\nimport { generateFile } from \"./generate\";\nimport { makeCommit } from \"./github\";\n\nimport {\n  zero,\n  one,\n  two,\n  three,\n  four,\n  five,\n  six,\n  seven,\n  eight,\n  nine,\n} from \"./segment\";\n\nconst segmentAndWeekMap = {\n  1: 3,\n  2: 12,\n  3: 21,\n  4: 30,\n};\n\nconst yearMethodMap = {\n  0: zero,\n  1: one,\n  2: two,\n  3: three,\n  4: four,\n  5: five,\n  6: six,\n  7: seven,\n  8: eight,\n  9: nine,\n};\n\nconst getByAllYears = (fromDateString, toDateString) => {\n  const dates = [];\n  let fromDate = moment(fromDateString, \"YYYY\");\n  let toDate = moment(toDateString, \"YYYY\");\n\n  while (fromDate.format(\"YYYY\") !== toDate.format(\"YYYY\")) {\n    dates.push(fromDate.format(\"YYYY\"));\n    fromDate = fromDate.add(1, \"year\");\n  }\n  dates.push(toDate.format(\"YYYY\"));\n\n  return dates\n    .map((date) => {\n      return getSegmentByDate(date);\n    })\n    .flat();\n};\n\nconst getSegmentByDate = (dateString) => {\n  const getDateForSegment = allSegmentAvailableDates(dateString);\n  const year = moment(dateString, format).format(\"YYYY\");\n  const yearDigit = year.split(\"\");\n  const allYears = getDateForSegment.map((numberArray, index) => {\n    return yearMethodMap[yearDigit[index]](numberArray);\n  });\n  return allYears.flat();\n};\n\nconst allSegmentAvailableDates = (dateString) => {\n  const result = Array(4)\n    .fill()\n    .map((_, index) => {\n      return getSegmentStartWeek(dateString, index + 1);\n    });\n  return result;\n};\n\nconst getSegmentStartWeek = (dateString, segmentIndex) => {\n  const formattedDate = moment(dateString, format);\n  const thirdWeekFirstDay = moment(formattedDate)\n    .clone()\n    .weeks(segmentAndWeekMap[segmentIndex])\n    .startOf(\"week\");\n  const startDate = thirdWeekFirstDay.clone().startOf(\"week\");\n  const endDate = thirdWeekFirstDay.clone().add(49, \"days\");\n  const dates = [];\n  while (startDate.isBefore(endDate)) {\n    dates.push(startDate.format(format));\n    startDate.add(1, \"days\");\n  }\n  return dates;\n};\n\nexport const callMethod = async (user, repo, fromYear, toYear, commits) => {\n  const commit = makeCommit(getByAllYears(fromYear, toYear), commits);\n  await generateFile(user, repo, [...new Set(commit)]);\n};\n","export default __webpack_public_path__ + \"static/media/2005.a7831355.JPG\";","import \"./App.css\";\nimport { callMethod } from \"./component\";\nimport { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport image2005 from \"./assets/2005.JPG\";\n\nconst App = () => {\n  const [fromYear, setFromYear] = useState(\"\");\n  const [toYear, setToYear] = useState(\"\");\n  const [repo, setRepo] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [commits, setCommits] = useState(1);\n  const [animation, setAnimation] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimation(false);\n    }, 3000);\n  });\n\n  const isEmpty = (field) => field === \"\";\n  const hasError =\n    isEmpty(fromYear) ||\n    isEmpty(toYear) ||\n    isEmpty(repo) ||\n    isEmpty(user) ||\n    isEmpty(commits);\n\n  const delay = (time) => {\n    return new Promise(function (resolve) {\n      setTimeout(resolve, time);\n    });\n  };\n  const downloadFile = async () => {\n    setLoading(true);\n    if (hasError) {\n      alert(\"Fill the form!!\");\n      setLoading(false);\n      return;\n    }\n    try {\n      await delay(3000);\n      await callMethod(\n        user,\n        repo,\n        Number(fromYear),\n        Number(toYear),\n        Number(commits)\n      );\n      setLoading(false);\n    } catch (error) {\n      alert(\"Input range and commits are exceed!!\");\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        border: \"2px dashed #000\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        paddingBottom: \"40px\",\n        paddingTop: \"40px\",\n        color: \"#fff\",\n      }}\n    >\n      <div className=\"mycontainer\" style={{ padding: \"20px\" }}>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h3 className=\"text-default text-center\">Segmenthub</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            {animation ? (\n              <i className=\"fa fa-spinner fa-spin\" />\n            ) : (\n              <div className=\"social\">\n                <a\n                  href=\"https://facebook.com/dhpradeep25\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <i className=\"fa fa-facebook\" />\n                </a>\n                <a\n                  href=\"https://github.com/dhpradeep/segmenthub\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <i className=\"fa fa-github\" />\n                </a>\n                <a\n                  href=\"https://www.linkedin.com/in/dhpradeep25/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <i className=\"fa fa-linkedin\" />\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h3 className=\"text-warning\">Intructions</h3>\n            <ol>\n              <li>Create a new repository on github.</li>\n              <li>\n                Fill the form.\n                <ol>\n                  <li>From Year: create segment commit from.</li>\n                  <li>To Year: create segment commit to.</li>\n                  <li>Github repo: repo you created on step 1.</li>\n                  <li>Github username: your github username.</li>\n                  <li>\n                    No. of commits: no of commits that you wants to create.\n                  </li>\n                </ol>\n              </li>\n              <li>\n                Press Generate Commits and save generated shell script file.\n              </li>\n              <li>\n                Run shell script (make sure you have correct github access).\n              </li>\n            </ol>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"form-group col-md-6\">\n            <br />\n            <label htmlFor=\"fromYear\">From Year</label>\n            <input\n              onChange={(e) => setFromYear(e.target.value)}\n              value={fromYear}\n              id=\"fromYear\"\n              className=\"form-control\"\n              type=\"number\"\n              min=\"1970\"\n              placeholder=\"1970\"\n            />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <br />\n            <label htmlFor=\"toYear\">To Year</label>\n            <input\n              onChange={(e) => setToYear(e.target.value)}\n              value={toYear}\n              id=\"toYear\"\n              className=\"form-control\"\n              type=\"number\"\n              placeholder=\"2025\"\n            />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <br />\n            <label htmlFor=\"repo\">Your Github Repository</label>\n            <input\n              onChange={(e) => setRepo(e.target.value)}\n              value={repo}\n              id=\"repo\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"repository\"\n            />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <br />\n            <label htmlFor=\"username\">Your Github Username</label>\n            <input\n              onChange={(e) => setUser(e.target.value)}\n              value={user}\n              id=\"username\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"username\"\n            />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <br />\n            <label htmlFor=\"commits\">No. Of Commits/year</label>\n            <input\n              onChange={(e) => setCommits(e.target.value)}\n              value={commits}\n              id=\"commits\"\n              className=\"form-control\"\n              type=\"number\"\n              placeholder=\"50\"\n            />\n          </div>\n          <div className=\"form-group col-md-12 text-center\">\n            <br />\n            <button\n              disabled={loading}\n              type=\"button\"\n              onClick={() => downloadFile()}\n              className=\"btn btn-primary\"\n            >\n              {loading ? (\n                <i className=\"fa fa-spinner fa-spin\" />\n              ) : (\n                <span>Generate Commits</span>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n      <br />\n      <br />\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h4 style={{ color: \"#000\" }}>Sample Images</h4>\n        </div>\n        <div className=\"col\">\n          <img src={image2005} alt=\"segment sample\" style={{ width: \"100%\" }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}